# =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager
# 声明自定义的realm，且为安全管理器指定realms
;hashedCredentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
;hashedCredentialsMatcher.hashAlgorithmName = SHA-1
;hashedCredentialsMatcher.hashIterations = 512

definitionRealm = com.coding.shiro.spring.example07.realm.DefinitionRealm
;definitionRealm.credentialsMatcher = $hashedCredentialsMatcher
securityManager.realms = $definitionRealm
# 用户退出后跳转到指定JSP页面
logout.redirectUrl = /login.jsp
# 若没有登录，则被authc过滤器重定向到login.jsp页面
authc.loginUrl = /login.jsp

[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.
;emon = emon123,admin,dev

[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.
;admin = order:list,order:add,order:del
;dev = order:list

[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation
# 【重点】过滤器是有顺序的
# 登录请求使用匿名过滤器
/login = anon
# 访问/home需要先认证
/home = authc
# 发送/order/list请求需要有admin角色
/order-list = roles[admin]
# 提交订单需要order:add权限
/order-add = perms["order:add"]
# 更新订单需要order:del权限
/order-del = perms["order:del"]
# 发送退出请求则用退出过滤器
/logout = logout